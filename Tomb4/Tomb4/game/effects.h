#pragma once

void SetFog(ItemInfo* item);
void finish_level_effect(ItemInfo* item);
void turn180_effect(ItemInfo* item);
void floor_shake_effect(ItemInfo* item);
void SoundFlipEffect(ItemInfo* item);
void RubbleFX(ItemInfo* item);
void PoseidonSFX(ItemInfo* item);
void ActivateCamera(ItemInfo* item);
void ActivateKey(ItemInfo* item);
void SwapCrowbar(ItemInfo* item);
void ExplosionFX(ItemInfo* item);
void LaraLocation(ItemInfo* item);
void LaraLocationPad(ItemInfo* item);
void GhostTrap(ItemInfo* item);
void KillActiveBaddies(ItemInfo* item);
void KillActiveBaddies(bool removeAll);
void lara_hands_free(ItemInfo* item);
void draw_right_gun(ItemInfo* item);
void draw_left_gun(ItemInfo* item);
void shoot_right_gun(ItemInfo* item);
void shoot_left_gun(ItemInfo* item);
void swap_meshes_with_meshswap1(ItemInfo* item);
void swap_meshes_with_meshswap2(ItemInfo* item);
void swap_meshes_with_meshswap3(ItemInfo* item);
void invisibility_on(ItemInfo* item);
void invisibility_off(ItemInfo* item);
void reset_hair(ItemInfo* item);
void ClearScarabsPatch(ItemInfo* item);
void MeshSwapToPour(ItemInfo* item);
void MeshSwapFromPour(ItemInfo* item);
void void_effect(ItemInfo* item);
void WaterFall(short item_number);
void WadeSplash(ItemInfo* item, long water, long depth);
void Splash(ItemInfo* item);
short DoBloodSplat(long x, long y, long z, short speed, short ang, short room_number);
void DoLotsOfBlood(long x, long y, long z, short speed, short ang, short room_number, long num);
void Richochet(GAME_VECTOR* pos);
void SoundEffects();
long ItemNearLara(PHD_3DPOS* pos, long rad);

extern FX_INFO* effects;
extern OBJECT_VECTOR* sound_effects;
extern long GlobalFogOff;
extern long number_sound_effects;
extern long FogTableColor[28];
extern void(*effect_routines[])(ItemInfo* item);
